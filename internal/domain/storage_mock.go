// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/bucket/storage.go

// Package bucket is a generated GoMock package.
package domain

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStorer is a mock of Storer interface
type MockStorer struct {
	ctrl     *gomock.Controller
	recorder *MockStorerMockRecorder
}

// MockStorerMockRecorder is the mock recorder for MockStorer
type MockStorerMockRecorder struct {
	mock *MockStorer
}

// NewMockStorer creates a new mock instance
func NewMockStorer(ctrl *gomock.Controller) *MockStorer {
	mock := &MockStorer{ctrl: ctrl}
	mock.recorder = &MockStorerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStorer) EXPECT() *MockStorerMockRecorder {
	return m.recorder
}

// GetBucket mocks base method
func (m *MockStorer) GetBucket(name string) (Bucketer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBucket", name)
	ret0, _ := ret[0].(Bucketer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBucket indicates an expected call of GetBucket
func (mr *MockStorerMockRecorder) GetBucket(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBucket", reflect.TypeOf((*MockStorer)(nil).GetBucket), name)
}

// CheckBucket mocks base method
func (m *MockStorer) CheckBucket(name string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckBucket", name)
	ret0, _ := ret[0].(bool)
	return ret0
}

// CheckBucket indicates an expected call of CheckBucket
func (mr *MockStorerMockRecorder) CheckBucket(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckBucket", reflect.TypeOf((*MockStorer)(nil).CheckBucket), name)
}

// AddBucket mocks base method
func (m *MockStorer) AddBucket(name string, b Bucketer) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddBucket", name, b)
}

// AddBucket indicates an expected call of AddBucket
func (mr *MockStorerMockRecorder) AddBucket(name, b interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddBucket", reflect.TypeOf((*MockStorer)(nil).AddBucket), name, b)
}

// RemoveBucket mocks base method
func (m *MockStorer) RemoveBucket(name string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveBucket", name)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveBucket indicates an expected call of RemoveBucket
func (mr *MockStorerMockRecorder) RemoveBucket(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveBucket", reflect.TypeOf((*MockStorer)(nil).RemoveBucket), name)
}
