syntax = "proto3";

// AuthorisationRequest is a message that is being send while trying to log in to a resource
message AuthorisationRequest {
    string login = 1;
    string password = 2;
    string ip = 3;
}

// Response is a return message that is used by all rpc methods; returns either a boolean response or an error
message Response {
    oneof result {
        bool ok = 1;
        string error = 2;
    }
}

// FlushBucketRequest is a message that contains information on a bucket that needs to be flushed
message FlushBucketRequest {
    string login = 1;
    string ip = 2;
}

// FlushBucketRequest is a message that contains information on a bucket that needs to be flushed
message PurgeBucketRequest {
    string name = 1;
}

// SubnetRequest is a message that is used to request black and white lists actions
message SubnetRequest {
    string ip = 1;
    bool list = 2;
}

// SubnetRequest is a message that is used to request black and white lists actions
message ListRequest {
    bool listType = 1;
}

// IpList is a message that holds all the IP addresses stored either in the whitelist or the blacklist
message IPList {
    repeated string list = 1;
}

// SubnetRequest is a message that is used to request black and white lists actions
message ListResponse {
    oneof result {
        IPList ips = 1;
        string error = 2;
    }
}

// Main API for the project
service ABFGuard {
    // Authorisation sends the authorisation request
    rpc Authorisation(AuthorisationRequest) returns (Response) {}
    // FlashBuckets sends a request to flush the buckets for the specified login and ip
    rpc FlushBuckets(FlushBucketRequest) returns (Response) {}
    // PurgeBucket sends a request to purge the specified bucket
    rpc PurgeBucket(PurgeBucketRequest) returns (Response) {}
    // AddIpToWhitelist sends a request to add the specified subnet to the whitelist
    rpc AddIPToWhitelist(SubnetRequest) returns (Response) {}
    // DeleteIpFromWhitelist sends a request to remove the specified subnet from the whitelist
    rpc DeleteIPFromWhitelist(SubnetRequest) returns (Response) {}
    // AddIpToBlacklist sends a request to add the specified subnet to the blacklist
    rpc AddIPToBlacklist(SubnetRequest) returns (Response) {}
    // DeleteIpFromBlacklist sends a request to remove the specified subnet from the blacklist
    rpc DeleteIPFromBlacklist(SubnetRequest) returns (Response) {}
    // GetWhiteList send sa request to retrieve an ip list from a specified list
    rpc GetIPList(ListRequest) returns (ListResponse) {}
}
